
// Job paramaters to set for this environment

params.scratch = true

// Process setting

process {

  // Global cluster parameters
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,140,7] ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  // software dependencies moved to conda.config

  withLabel: rtgtools {
	container = "docker://quay.io/biocontainers/rtg-tools:3.11--0"
  }
  withLabel: glnexus {
	container = "docker://quay.io/mlin/glnexus:v1.2.6"
  }
  withLabel: deepvariant {
                container = "docker://google/deepvariant:1.0.0"
  }
  withLabel: gatk {
	container = "docker://broadinstitute/gatk:4.1.8.1"
  }	
  withName:runBWA {
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( params.max_cpus , 'cpus' ) }
  }
  withName:runFastp {
        time = { check_max( 5.h * task.attempt, 'time' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	cpus = 8
  }
  withName: runFixmate {
        memory = { 16.GB * task.attempt }
        time = { check_max( 16.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  }

  withName:mergeBamFiles_bySample {
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 8.h * task.attempt, 'time' ) }
        cpus = { check_max( 4 * task.attempt, 'cpus' ) }
  }
  withName:runMarkDuplicates {
        memory = { 8.GB * task.attempt }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  }
  withName:runOxoGMetrics {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
        memory = { 16.GB * task.attempt }

  }
  withName:runHybridCaptureMetrics {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
        memory = { 12.GB * task.attempt }

  }
  withName:runCollectMultipleMetrics {
  	memory = { check_max( 25.GB * task.attempt, 'memory' ) }
  	time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcFastq {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcLibrary {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcSample {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName: "runMultiqcLibrary" {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcSample {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcLibrary {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcSample {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runMultiqcPanel {
	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runDeepvariant {
	cpus = { check_max( params.max_cpus , 'cpus' ) }
	memory = { check_max( 25.GB * task.attempt, 'memory' ) }
        time = { check_max( 24.h * task.attempt, 'time' ) }
  } 
  withName: runMergeGvcf {
	time = { check_max( 12.h * task.attempt, 'time' ) }
  }

}



