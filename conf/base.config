
// Job paramaters to set for this environment

params.scratch = true

// Process setting

process {

  // Global cluster parameters
  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus in [143,137,140,7] ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  // software dependencies moved to conda.config

  withLabel: picard {
	container = "docker://quay.io/biocontainers/picard:2.20.4--1"
  }
  withLabel: rtgtools {
	container = "docker://quay.io/biocontainers/rtg-tools:3.11--0"
  }
  withLabel: glnexus {
	container = "docker://quay.io/mlin/glnexus:v1.3.1"
  }
  withLabel: deepvariant {
                container = "docker://google/deepvariant:1.1.0"
  }
  withLabel: gatk {
	container = "docker://broadinstitute/gatk:4.1.8.1"
  }	
  withLabel: expansion_hunter {
	container = "docker://quay.io/biocontainers/expansionhunter:4.0.2--he785bd8_0"
  }
  withLabel: cnvkit {
	container = "docker://quay.io/biocontainers/cnvkit:0.9.9--pyhdfd78af_0"
  }
  withLabel: whatshap {
	container = "docker://quay.io/biocontainers/whatshap:1.1--py36hae55d0a_1"
	time = { check_max( 12.h * task.attempt, 'time' ) }
  }
  withLabel: vep {
	container = "docker://quay.io/biocontainers/ensembl-vep:99.2--pl526hecc5488_0"
  }
  withName:'vep|vep_per_sample' {
	time = { check_max( 5.h * task.attempt, 'time' ) }
        memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        cpus = 8
  }
  withName:align {
        memory = { check_max( 96.GB * task.attempt, 'memory' ) }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( params.max_cpus , 'cpus' ) }
  }
  withName:trim {
        time = { check_max( 5.h * task.attempt, 'time' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
	cpus = 8
  }
  withName:merge_multi_lane {
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 8.h * task.attempt, 'time' ) }
        cpus = { check_max( 4 * task.attempt, 'cpus' ) }
  }
  withName:dedup {
        memory = { 8.GB * task.attempt }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  }
  withName:oxo_metrics {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
        memory = { 16.GB * task.attempt }

  }
  withName:hybrid_capture_metrics {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
        memory = { 12.GB * task.attempt }

  }
  withName: cnvkit_reference {
	memory = { 32.GB * task.attempt }
        time = { check_max( 12.h * task.attempt, 'time' ) }
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
  }
  withName:multi_metrics {
  	memory = { check_max( 25.GB * task.attempt, 'memory' ) }
  	time = { check_max( 12.h * task.attempt, 'time' ) }
  }

  withName:multiqc_fastq {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:multiqc_sample {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:multiqc_library {
  	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:multiqc_panel {
	time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:deepvariant {
	cpus = { check_max( params.max_cpus , 'cpus' ) }
	memory = { check_max( 25.GB * task.attempt, 'memory' ) }
        time = { check_max( 24.h * task.attempt, 'time' ) }
  } 
  withName: merge_gvcf {
	time = { check_max( 12.h * task.attempt, 'time' ) }
  }

}



