
// Job paramaters to set for this environment

params.outdir = "output" 

params.splitter = "/home/sukmb352/git/ikmb-wgs-alignment/bin/split_and_compress.sh"

params.gatk_jar = "/ifs/data/nfs_share/ikmb_repository/software/gatk/3.7.0/GenomeAnalysisTK.jar"
params.picard_jar = "/ifs/data/nfs_share/ikmb_repository/software/picard/2.9.2/picard.jar"
params.trimmomatic = "/ifs/data/nfs_share/ikmb_repository/software/trimmomatic/0.36"

params.calibration_exomes = "/ifs/data/nfs_share/ikmb_repository/references/exomes/calibration_exomes_resorted/calibration_exomes.list"
params.calibration_exomes_samples = "/ifs/data/nfs_share/ikmb_repository/references/exomes/calibration_exomes_resorted/calibration_exomes.samples.list"


params.leading = 3
params.trailing = 3
params.slidingwindow = "4:15"
params.minlen = 36
params.adapters = "NexteraPE-PE.fa"

params.scratch = true

// Resource manager settings

executor {
  name="slurm"
  queueSize=100
}

// Process setting

process {

  // Global cluster parameters
  executor = 'slurm'
  queue = 'ikmb_a'
  clusterOptions = { '--qos=ikmb_a' }
  memory = { 8.GB * task.attempt }
  cpus = { 1 * task.attempt }
  time = { 2.h * task.attempt }
  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  $runBwa {
    module = [ 'IKMB', 'Bwa/0.7.15' , 'Samtools/1.5' ]
    memory = "120GB"
    time = { 8.h * task.attempt }
    cpus = 16
  }

  $runTrimmomatic {
     module = [ 'Java/1.8.0' ]
     cpus = 8
     time = { 8.h * task.attempt }
     memory = "16GB"
  }

  $runMarkDuplicates { 
     module = [ 'Java/1.8.0' , 'GATK/4b3' ]
     memory = "64GB"
     cpus = 5
     time = { 12.h * task.attempt }   
  }

  $runBaseRecalibrator {
    module = [ 'Java/1.8.0' , 'GATK/4b5' ]
    time = { 24.h * task.attempt }
    memory = "64GB"
    cpus = 2
  }

  $runPrintReads {
    module = [ 'Java/1.8.0' , 'GATK/4b5' ]
    time = { 72.h * task.attempt }
    memory = "26GB"
  }

  $runBaseRecalibratorPostRecal {
    module = [ 'Java/1.8.0', 'R/3.2.0' , 'GATK/4b5' ]
    time = { 12.h * task.attempt }
  }

  $runAnalyzeCovariates {
    module = [ 'Java/1.8.0', 'R/3.4.0' , 'GATK4b5' ]
    time = { 12.h * task.attempt }
  }
 
  $runDepthOfCoverage { 
    module = [ 'Java/1.8.0' , 'R/3.2.0', 'GATK/4b5' ]
    time = { 12.h * task.attempt }
  }

  $runCollectMultipleMetrics {
    module = [ 'Java/1.8.0', 'R/3.2.0', 'Picard/2.9.2' , 'Python/2.7.10', "MultiQC/1.2"]
    time = { 12.h * task.attempt }
    memory = "25GB"
  }

  $runFastQC {
    module = [ 'Java/1.8.0' , 'Fastqc/0.11.5']
    time = { 6.h * task.attempt }
  }

  $runMultiQCFastq {
     module = [ "Python/2.7.10" ,"MultiQC/1.2" ]
     time = {  4.h * task.attempt }
     memory = "7GB"
  }

  $runMultiQCLibrary {
     module = [ 'Python/2.7.10',"MultiQC/1.2" ]     
     time = {  4.h * task.attempt }
     memory = "7GB"
  }

  $runMultiQCSample {
     module = [ 'Python/2.7.10',"MultiQC/1.2" ]
     time = {  4.h * task.attempt }
     memory = "7GB"
  }

  $runHCSample {
    module =  [ "Java/1.8.0" , "GATK/4b5"]
    cpus=4
    memory = { 25.GB * task.attempt }
    time = { 4.h * task.attempt }

  }

  $runJoinedGenotyping {
 	module =  [ "Java/1.8.0" , "GATK/4b5" ]
        cpus=8
        memory = { 48.GB * task.attempt }
        time = { 8.h * task.attempt }
  }

  $RunRecalibrationModeSNP {
	module =  [ "Java/1.8.0" , "GATK/4b5" ]
	cpus=8
	memory = { 25.GB * task.attempt }
	time = { 8.h * task.attempt }
  }

  $RunRecalibrationModeIndel {
        module =  [ "Java/1.8.0" , "GATK/4b5" ]
        cpus=8
        memory = { 25.GB * task.attempt }
        time = { 8.h * task.attempt }
  }

  $runRcalIndelApply {
	module =  [ "Java/1.8.0" , "GATK/4b5" ]
        memory = { 25.GB * task.attempt }
        time = { 8.h * task.attempt }
  }

  $runRcalSNPApply {
	module =  [ "Java/1.8.0" , "GATK/4b5" ]
        memory = { 25.GB * task.attempt }
        time = { 8.h * task.attempt }
  } 

  $runVariantFiltrationIndel {
	module =  [ "Java/1.8.0" , "GATK/4b5" ]
        memory = { 25.GB * task.attempt }
        time = { 4.h * task.attempt }

  }

  $runCombineVariants {
	module =  [ "Java/1.8.0" , "GATK/4b5" ]
        memory = { 8.GB * task.attempt }
        time = { 2.h * task.attempt }

  }

  $runVep {
	module = [ 'Perl/5.18.4', 'HTSlib/1.3', 'Samtools/1.3', 'EnsEMBL/86' ]
	cpus = 8
	memory = {32.GB * task.attempt }
	time = { 4.h * task.attempt }
  }

  $runAnnovar {
  	module = [ 'Annovar/2016-10-13' ]
	time = { 6.h * task.attempt }
	cpus = 8
        memory = {32.GB * task.attempt }
  }		
 
}

params {

   genomes {
	'hg19' {
		fasta = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/ucsc.hg19.fasta"
		dbsnp = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/dbsnp_138.hg19.vcf.gz"
		gold = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf.gz"
		g1k = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/1000G_phase1.indels.hg19.sites.vcf.gz"
		omni = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/1000G_omni2.5.hg19.sites.vcf.gz"
		hapmap = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/2.8/hg19/hapmap_3.3.hg19.sites.vcf.gz"


	}
	'hg38' {
                fasta = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/hg38/hg38bundle/Homo_sapiens_assembly38.fasta"
                dbsnp = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/hg38/hg38bundle/dbsnp_144.hg38.vcf.gz"
                gold = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/hg38/hg38bundle/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz"
		g1k = "/ifs/data/nfs_share/ikmb_repository/references/gatk/bundle/hg38/hg38bundle/1000G_phase1.snps.high_confidence.hg38.vcf.gz"
	}

   }

   kits {
      'Nextera' {
         targets = "/ifs/data/nfs_share/ikmb_repository/references/exomes/nextera_exome_target_2017/nexterarapidcapture_exome_target_v1.2_hg19.interval_list"
         baits = "/ifs/data/nfs_share/ikmb_repository/references/exomes/nextera_exome_target_2017/nexterarapidcapture_exome_intervals_v1.2_hg19.interval_list"
      }
      'xGen' {
	targets = "/ifs/data/nfs_share/ikmb_repository/references/exomes/idt_xgen/v1.0/xgen-exome-research-panel-targets.interval_list"
        baits = "/ifs/data/nfs_share/ikmb_repository/references/exomes/idt_xgen/v1.0/xgen-exome-research-panel-probes.interval_list"
      }
   }


}

