params {

	outdir = "results"
	saveTrimmed = false

	snp_filter_rules = "QD < 2.0 || FS > 60.0 || MQ < 40.0 || MQRankSum < -12.5 || ReadPosRankSum < -8.0"
	indel_filter_rules = "QD < 2.0 || FS > 200.0 || ReadPosRankSum < -20.0"

	indel_recalibration_tranche_values = ["100.0", "99.95", "99.9", "99.5", "99.0", "97.0", "96.0", "95.0", "94.0", "93.5", "93.0", "92.0", "91.0", "90.0"]
	snp_recalibration_tranche_values = ["100.0", "99.95", "99.9", "99.8", "99.6", "99.5", "99.4", "99.3", "99.0", "98.0", "97.0", "90.0" ]

	snp_recalibration_values = [ "QD", "ReadPosRankSum", "FS", "MQ", "SOR", "DP" ]
	indel_recalbration_values = ["FS", "ReadPosRankSum", "QD", "SOR", "DP"]

	snp_filter_level = 99.7
	indel_filter_level = 99.7

	interval_padding = 10

	maxMultiqcEmailFileSize = 25.MB
	skip_multiqc = false

	fasta = false
	dict = false
	dbsnp = false
	g1k = false
	mills_indels = false
	omni = false
	hapmap = false
	mitochondrion = false

	panel = false
	panel_intervals = false
	panel_coverage = 10

	targets = false
	baits = false

	vqsr = false
	no_dedup = false

	plaintext_email = false

	logo = "${baseDir}/assets/ikmblogo.png"
}

manifest {
	version = "1.2"
	description = "Exome-seq Pipeline"
	author = "Marc P. Hoeppner"
	homePage = "https://github.com/marchoeppner/exome-seq"
	nextflowVersion = "0.18.1"
}

timeline {
        enabled = true
        file = "${params.outdir}/pipeline_info/exome-pipeline_timeline.html"
}
report {
        enabled = true
        file = "${params.outdir}/pipeline_info/exome-pipeline_report.html"
}
trace {
        enabled = true
        file = "${params.outdir}/pipeline_info/exome-pipeline_trace.txt"
}
dag {
        enabled = true
        file = "${params.outdir}/pipeline_info/exome-pipeline_dag.svg"
}

process.container = 'ikmb/exome-seq:latest'

profiles {
	standard {
		includeConfig 'conf/base.config'
		includeConfig 'conf/rzcluster.config'
                includeConfig 'conf/resources.config'
	}
	singularity_ikmbdx {
                includeConfig 'conf/base.config'
                includeConfig 'conf/diagnostic.config'
                includeConfig 'conf/resources.config'
		includeConfig 'conf/singularity.config'
	}
	sinularity_devel {
                includeConfig 'conf/base.config'
		includeConfig 'conf/rzcluster_new.config'
                includeConfig 'conf/resources.config'
	}
}

params.max_cpus = 16
params.max_ram = 120

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
